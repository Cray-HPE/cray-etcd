#!/bin/sh
#
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

if test "$#" -ne 1; then
  echo "Usage: endpoint_health <project_name>|all_clusters"
  exit 1
fi

cluster=$1

if [ "$cluster" == "all_clusters" ]; then
  clusters=$(kubectl get statefulsets.apps -A | grep bitnami-etcd | awk '{print $2}')
  for c in $clusters; do
    ns=$(kubectl get statefulsets.apps -A | grep ${c} | awk '{print $1}')
    pods=$(kubectl get endpoints ${c} -n ${ns} -o jsonpath='{.subsets[*].addresses[*].targetRef.name}')
    for pod in $pods
    do
      echo "### ${pod} Endpoint Health: ###"
      kubectl -n ${ns} exec ${pod} -c etcd -- /bin/sh -c "etcdctl endpoint health -w table"
    done
  done
else
  ss_name="${cluster}-bitnami-etcd"
  ns=$(kubectl get statefulsets.apps -A | grep ${ss_name} | awk '{print $1}')

  if [ -z "$ns" ]; then
    echo "ERROR: Cluster ${cluster} not found."
    exit 1
  fi

  pods=$(kubectl get endpoints ${ss_name} -n ${ns} -o jsonpath='{.subsets[*].addresses[*].targetRef.name}')
  for pod in $pods
  do
    echo "### ${pod} Endpoint Status: ###"
    kubectl -n ${ns} exec ${pod} -c etcd -- /bin/sh -c "etcdctl endpoint health -w json"
  done
fi
