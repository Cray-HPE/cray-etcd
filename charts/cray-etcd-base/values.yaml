#
# MIT License
#
# (C) Copyright 2022, 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
# Default values for cray-etcd-base
global:
  chart:
    name: ""  # set at deploy time automatically, no need to ever set explicitly
    version: ""  # set at deploy time automatically, no need to ever set explicitly
  security:
    allowInsecureImages: true
labels: {}
annotations: {}
nameOverride: ""  # the name of your service
fullnameOverride: ""  # use this if you want to provide a more-complete name for certain labels/naming (very optional)


#
# See the following for parameter descriptions and full list of
# variables available to override:
#
# https://github.com/bitnami/charts/tree/main/bitnami/etcd#parameters
#
etcd:
  extraVolumeMounts:
  - mountPath: /csm
    name: etcd-config
  volumePermissions:
    enabled: true
    image:
      registry: artifactory.algol60.net
      repository: csm-docker/stable/docker.io/bitnami/os-shell
      tag: 12-debian-12-r38
      digest: ""
      pullPolicy: IfNotPresent
  containerPorts:
    client: 2379
    peer: 2380
  command:
    - "sh"
    - "-c"
    - |
      cp /csm/etcd.conf.yml /opt/bitnami/etcd/conf/etcd.yaml
      sed -i s/POD_NAME/${MY_POD_NAME}/ /opt/bitnami/etcd/conf/etcd.yaml
      for opt in $(etcd --help 2>&1 | grep '^ *--' | sed -e 's/^ *--//' -e 's/ .*$//')
      do
          env_name=$(echo "${opt}" | sed -e 's/^/ETCD_/' -e 's/-/_/g' | tr '[:lower:]' '[:upper:]')
          env_val="$(eval echo "\${${env_name}}")"
          if [ -n "${env_val}" ]
          then
              if ! grep -q "${opt}:" /opt/bitnami/etcd/conf/etcd.yaml
              then
                  if [ "${opt}" = auto-compaction-retention ]; then
                      env_val="\"${env_val}\""
                  fi
                  echo "${opt}: ${env_val}" >> /opt/bitnami/etcd/conf/etcd.yaml
              fi
          fi
      done
      /opt/bitnami/scripts/etcd/entrypoint.sh /opt/bitnami/scripts/etcd/run.sh

  enabled: true
  clusterDomain: cluster.local
  image:
    registry: artifactory.algol60.net
    repository: csm-docker/stable/docker.io/bitnami/etcd
    tag: 3.5.18-debian-12-r5
    debug: false
  pullPolicy: IfNotPresent
  fullnameOverride: ""
  nameOverride: ""
  livenessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 10
  startupProbe:
    enabled: false
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 20
  auth:
    rbac:
      create: false
    peer:
      secureTransport: false
      useAutoTLS: false
      existingSecret: ""
      enableAuthentication: false
      certFilename: cert.pem
      certKeyFilename: key.pem
      caFilename: ""
    client:
      secureTransport: false
      useAutoTLS: false
      existingSecret: ""
      enableAuthentication: false
      certFilename: cert.pem
      certKeyFilename: key.pem
      caFilename: ""
      issuer: "cert-manager-issuer-common"
  autoCompactionMode: periodic
  # ‘periodic’ for duration based retention, defaulting to hours if no time unit is provided (e.g. ‘5m’).
  # ‘revision’ for revision number based retention.
  autoCompactionRetention: "1"  # Auto compaction retention in hour. 0 means disable auto compaction.
  # if compactionMode == periodic, then compactionRetention is the time on which compaction should trigger. default (1 hour)
  # if compactionMode == revision, then compactionRetention is the number of revisions at when compaction will get trigger.
  podAnnotations: {}
  replicaCount: 3
  labels: {}
  annotations: {}
  nodeSelector: {}
  affinity: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: hard
  nodeAffinityPreset: {}
  resources: {}
  persistence:
    enabled: true
    accessModes:
      - "ReadWriteOnce"
    size: 3Gi  # A bit of headroom above 2GB quota default
  priorityClassName: ""
  startFromSnapshot:
    enabled: false
    existingClaim: ""
    snapshotFilename: ""
  disasterRecovery:
    enabled: true
    cronjob:
      snapshotsDir: "/snapshots"
      schedule: "0 */1 * * *"
      historyLimit: 1
      snapshotHistoryLimit: 24
      resources:
        limits: {}
        requests: {}
      nodeSelector: {}
      tolerations: []
    pvc:
      existingClaim: bitnami-etcd-snapshotter
      size: 2Gi
      storageClassName: ceph-cephfs-external
  extraEnvVars:
    - name: ETCD_HEARTBEAT_INTERVAL
      value: "4200"
    - name: ETCD_ELECTION_TIMEOUT
      value: "21000"
    - name: ETCD_MAX_SNAPSHOTS
      value: "5"
    - name: ETCD_QUOTA_BACKEND_BYTES
      value: "10737418240"
    - name: ETCD_SNAPSHOT_COUNT
      value: "10000"
    - name: ETCD_SNAPSHOT_HISTORY_LIMIT
      value: "24"
    - name: ETCD_DISABLE_PRESTOP
      value: "yes"
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    allowPrivilegeEscalation: false


util:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker.io/demisto/boto3py3
    tag: pet-utils-csm-1.6
    pullPolicy: IfNotPresent
